// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// trapezoid
double trapezoid(NumericVector x, NumericVector y);
RcppExport SEXP _saFAB_trapezoid(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(trapezoid(x, y));
    return rcpp_result_gen;
END_RCPP
}
// eval_pr_dens
Rcpp::List eval_pr_dens(NumericVector z, double mu0, NumericVector sig0, NumericVector grid_x, NumericVector grid_theta);
RcppExport SEXP _saFAB_eval_pr_dens(SEXP zSEXP, SEXP mu0SEXP, SEXP sig0SEXP, SEXP grid_xSEXP, SEXP grid_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sig0(sig0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_x(grid_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_theta(grid_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(eval_pr_dens(z, mu0, sig0, grid_x, grid_theta));
    return rcpp_result_gen;
END_RCPP
}
// PredictiveRecursionFDR
Rcpp::List PredictiveRecursionFDR(NumericVector z, IntegerVector sweeporder, NumericVector grid_x, NumericVector theta_guess, double mu0, double sig0, double nullprob, double decay);
RcppExport SEXP _saFAB_PredictiveRecursionFDR(SEXP zSEXP, SEXP sweeporderSEXP, SEXP grid_xSEXP, SEXP theta_guessSEXP, SEXP mu0SEXP, SEXP sig0SEXP, SEXP nullprobSEXP, SEXP decaySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sweeporder(sweeporderSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_x(grid_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta_guess(theta_guessSEXP);
    Rcpp::traits::input_parameter< double >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< double >::type sig0(sig0SEXP);
    Rcpp::traits::input_parameter< double >::type nullprob(nullprobSEXP);
    Rcpp::traits::input_parameter< double >::type decay(decaySEXP);
    rcpp_result_gen = Rcpp::wrap(PredictiveRecursionFDR(z, sweeporder, grid_x, theta_guess, mu0, sig0, nullprob, decay));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_saFAB_trapezoid", (DL_FUNC) &_saFAB_trapezoid, 2},
    {"_saFAB_eval_pr_dens", (DL_FUNC) &_saFAB_eval_pr_dens, 5},
    {"_saFAB_PredictiveRecursionFDR", (DL_FUNC) &_saFAB_PredictiveRecursionFDR, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_saFAB(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
